/* autogenerated by Processing revision 1282 on 2022-05-16 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class TreeMain extends PApplet {

TreeNode root, a, b, c, d;

 public void setup(){
  /* size commented out by preprocessor */;
  root = new TreeNode(width / 2, 25, "root");
  a = new TreeNode(width / 2 - 50, 75, "a");
  b = new TreeNode(width / 2 + 50, 75, "b");
  c = new TreeNode(width / 2 - 100, 125, "c");
  d = new TreeNode(width / 2 + 100, 125, "d");
  root.left = a;
  root.right = b;
  a.left = c;
  b.right = d;
  
}

 public void draw(){
  recursiveDisplay(root);
}

 public void recursiveDisplay(TreeNode t){
  t.display();
  if(t.left != null) recursiveDisplay(t.left);
  if(t.right != null) recursiveDisplay(t.right);
}
int col_red = color(240,0,0);
int col_green = color(50,250,50);

class TreeNode {
  PVector pos;
  float psize; //diameter
  int fillCol = color(255);
  String name;
  
  TreeNode left, right;
  
  TreeNode(int x, int y, String name) {
    pos = new PVector(x,y);
    psize = 20;
    this.name = name;
  }
 
   public void display() {
    stroke(0);
    fill(fillCol);
    circle(pos.x, pos.y, psize);
    
    fill(0);
    textAlign(CENTER);
    text(name, pos.x, pos.y);
    
    //draw lines to left and right
    float OFFSET = 3;
    if (left != null) {
      stroke(col_red);
      line(pos.x - OFFSET, pos.y - 0, left.pos.x - OFFSET, left.pos.y - 0);
    }
    if (right != null) {
      stroke(col_green);
      line(pos.x + OFFSET, pos.y + 0, right.pos.x + OFFSET, right.pos.y + 0);
    }
  }
}


  public void settings() { size(400, 400); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "TreeMain" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
